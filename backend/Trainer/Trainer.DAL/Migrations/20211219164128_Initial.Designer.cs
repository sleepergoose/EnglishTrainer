// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trainer.DAL.Context;

namespace Trainer.DAL.Migrations
{
    [DbContext(typeof(TrainerContext))]
    [Migration("20211219164128_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Trainer.Domain.Abstract.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Track");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Track");
                });

            modelBuilder.Entity("Trainer.Domain.Models.PhrasalVerb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("PhrasalVerbs");
                });

            modelBuilder.Entity("Trainer.Domain.Models.PvExample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("PhrasalVerbId")
                        .HasColumnType("int");

                    b.Property<string>("Phrase")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.HasKey("Id");

                    b.HasIndex("PhrasalVerbId");

                    b.ToTable("PvExamples");
                });

            modelBuilder.Entity("Trainer.Domain.Models.PvToTrack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PhrasalVerbId")
                        .HasColumnType("int");

                    b.Property<int>("PvTrackId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PhrasalVerbId");

                    b.HasIndex("PvTrackId");

                    b.ToTable("PvToTracks");
                });

            modelBuilder.Entity("Trainer.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FirebaseId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Trainer.Domain.Models.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Transcription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("Trainer.Domain.Models.WordExample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Phrase")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<int?>("WordId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WordId");

                    b.ToTable("WordExamples");
                });

            modelBuilder.Entity("Trainer.Domain.Models.WordToTrack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("WordId")
                        .HasColumnType("int");

                    b.Property<int>("WordTrackId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WordId");

                    b.HasIndex("WordTrackId");

                    b.ToTable("WordToTracks");
                });

            modelBuilder.Entity("Trainer.Domain.Models.PvTrack", b =>
                {
                    b.HasBaseType("Trainer.Domain.Abstract.Track");

                    b.HasDiscriminator().HasValue("PvTrack");
                });

            modelBuilder.Entity("Trainer.Domain.Models.WordTrack", b =>
                {
                    b.HasBaseType("Trainer.Domain.Abstract.Track");

                    b.HasDiscriminator().HasValue("WordTrack");
                });

            modelBuilder.Entity("Trainer.Domain.Abstract.Track", b =>
                {
                    b.HasOne("Trainer.Domain.Models.User", "Author")
                        .WithMany("Tracks")
                        .HasForeignKey("AuthorId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Trainer.Domain.Models.PvExample", b =>
                {
                    b.HasOne("Trainer.Domain.Models.PhrasalVerb", "PhrasalVerb")
                        .WithMany("Examples")
                        .HasForeignKey("PhrasalVerbId");

                    b.Navigation("PhrasalVerb");
                });

            modelBuilder.Entity("Trainer.Domain.Models.PvToTrack", b =>
                {
                    b.HasOne("Trainer.Domain.Models.PhrasalVerb", "PhrasalVerb")
                        .WithMany("Tracks")
                        .HasForeignKey("PhrasalVerbId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trainer.Domain.Models.PvTrack", "PvTrack")
                        .WithMany("PhrasalVerbs")
                        .HasForeignKey("PvTrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhrasalVerb");

                    b.Navigation("PvTrack");
                });

            modelBuilder.Entity("Trainer.Domain.Models.WordExample", b =>
                {
                    b.HasOne("Trainer.Domain.Models.Word", "Word")
                        .WithMany("Examples")
                        .HasForeignKey("WordId");

                    b.Navigation("Word");
                });

            modelBuilder.Entity("Trainer.Domain.Models.WordToTrack", b =>
                {
                    b.HasOne("Trainer.Domain.Models.Word", "Word")
                        .WithMany("Tracks")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trainer.Domain.Models.WordTrack", "WordTrack")
                        .WithMany("Words")
                        .HasForeignKey("WordTrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Word");

                    b.Navigation("WordTrack");
                });

            modelBuilder.Entity("Trainer.Domain.Models.PhrasalVerb", b =>
                {
                    b.Navigation("Examples");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Trainer.Domain.Models.User", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Trainer.Domain.Models.Word", b =>
                {
                    b.Navigation("Examples");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("Trainer.Domain.Models.PvTrack", b =>
                {
                    b.Navigation("PhrasalVerbs");
                });

            modelBuilder.Entity("Trainer.Domain.Models.WordTrack", b =>
                {
                    b.Navigation("Words");
                });
#pragma warning restore 612, 618
        }
    }
}
